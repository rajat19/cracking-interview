const n="---\nlayout: post\ntitle: Kth Smallest Element in a Sorted Matrix\ntopics: [array, binary-search]\nlangs: [java, py, cpp, kt]\ntc: O(n+m)\nsc: O(1)\nleetid: 378\ndifficulty: medium\ncompanies: [facebook]\ngfg: \nhackerrank: \ninterviewbit: \nleetcode: kth-smallest-element-in-a-sorted-matrix\n---\n\nGiven an `n x n` matrix where each of the rows and columns is sorted in ascending order, \nreturn the k<sup>th</sup> smallest element in the matrix.\n\nNote that it is the k<sup>th</sup> smallest element in the sorted order, \nnot the k<sup>th</sup> distinct element.\n\n---\n\n## How to Solve\n\n### Algorithm\n- Start with `left = minOfMatrix = matrix[0][0]` and `right = maxOfMatrix = matrix[n-1][n-1]`. \n- Find the `mid` of the `left` and the `right`. This middle number is **NOT necessarily** an element in the matrix. \n- If `countLessOrEqual(mid) >= k`, we keep current `ans = mid` and try to find smaller value by searching on the left side. Otherwise, we search on the right side. \n- Since `ans` is the smallest value which `countLessOrEqual(ans) >= k`, so it's the k<sup>th</sup> smallest element in the matrix.\n\n### How to count number of elements less or equal to x efficiently?\n- Since our `matrix` is sorted in ascending order by rows and columns. \n- We use two pointers, one points to the rightmost column `c = n-1`, and one points to the lowest row `r = 0`.\n  - If `matrix[r][c] <= x` then the number of elements in row `r` less or equal to `x` is `(c+1)` (Because `row[r]` is sorted in ascending order, so if `matrix[r][c] <= x` then `matrix[r][c-1]` is also <= `x`). \n  Then we go to next row to continue counting.\n  - Else if `matrix[r][c] > x`, we decrease column c until `matrix[r][c] <= x` (Because column is sorted in ascending order, so if `matrix[r][c] > x` then `matrix[r+1][c]` is also > `x`). \n- Time complexity for counting: `O(M+N)`.\n\n---\n\n## Test Cases\n\n**Input:**\n```\n(int[]) matrix = [[1,5,9],[10,11,13],[12,13,15]]\n(int) k = 8\n```\n\n**Output:**\n```\n(int) 13\n```\n\n**Explanation:**\n```\nThe elements in the matrix are [1,5,9,10,11,12,13,13,15], \nand the 8th smallest number is 13\n```";export{n as default};
