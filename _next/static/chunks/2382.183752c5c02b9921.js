"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2382],{52382:n=>{n.exports=JSON.parse('{"c":{"language":"c","code":"int singleNumber(int* nums, int size) {\\n    int ones = 0, twos = 0;\\n    for(int i=0; i<size; i++) {\\n        ones = (ones ^ nums[i]) & ~twos;\\n        twos = (twos ^ nums[i]) & ~ones;\\n    }\\n    return ones;\\n}","subPath":"","fileName":"solution.c"},"cpp":{"language":"cpp","code":"class Solution {\\npublic:\\n    int singleNumber(vector<int>& nums) {\\n        int ones = 0, twos = 0;\\n        for(int i=0; i<nums.size(); i++) {\\n            ones = (ones ^ nums[i]) & ~twos;\\n            twos = (twos ^ nums[i]) & ~ones;\\n        }\\n        return ones;\\n    }\\n};","subPath":"","fileName":"solution.cpp"},"java":{"language":"java","code":"class Solution {\\n    public int singleNumber(int[] nums) {\\n        int ones = 0, twos = 0;\\n        for (int num : nums) {\\n            ones = (ones ^ num) & ~twos;\\n            twos = (twos ^ num) & ~ones;\\n        }\\n        return ones;\\n    }\\n\\n}","subPath":"","fileName":"solution.java"}}')}}]);