"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6537],{36537:n=>{n.exports=JSON.parse('{"java":{"language":"java","code":"class FreqStack {\\n\\n    private PriorityQueue<Node> pq;\\n    private Map<Integer, Integer> freq;\\n    private int index;\\n    public FreqStack() {\\n        pq = new PriorityQueue<>();\\n        freq = new HashMap<>();\\n        index = 0;\\n    }\\n\\n    public void push(int val) {\\n        freq.put(val, freq.getOrDefault(val, 0) + 1);\\n        pq.offer(new Node(val, freq.get(val), index++));\\n    }\\n\\n    public int pop() {\\n        Node top = pq.poll();\\n        freq.put(top.val, freq.get(top.val) - 1);\\n        return top.val;\\n    }\\n}\\n\\nclass Node implements Comparable<Node> {\\n    int val;\\n    int freq;\\n    int index;\\n    Node(int v, int f, int i) {\\n        val = v;\\n        freq = f;\\n        index = i;\\n    }\\n\\n    public int compareTo(Node o) {\\n        if (this.freq != o.freq) return o.freq - this.freq;\\n        return o.index - this.index;\\n    }\\n}\\n\\n/**\\n * Your FreqStack object will be instantiated and called as such:\\n * FreqStack obj = new FreqStack();\\n * obj.push(val);\\n * int param_2 = obj.pop();\\n */","subPath":"","fileName":"solution.java"}}')}}]);