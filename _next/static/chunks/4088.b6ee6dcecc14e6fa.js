"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4088],{24088:n=>{n.exports=JSON.parse('{"java":{"language":"java","code":"class Solution {\\n    public int subarraySum(int[] nums, int k) {\\n        int count = 0, sum = 0;\\n        Map<Integer, Integer> map = new HashMap<>();\\n        map.put(0, 1);\\n        for(int i=0; i<nums.length; i++) {\\n            sum += nums[i];\\n            if (map.containsKey(sum - k)) {\\n                count += map.get(sum - k);\\n            }\\n            map.put(sum, map.getOrDefault(sum, 0)+1);\\n        }\\n        return count;\\n    }\\n}","subPath":"","fileName":"solution.java"},"py":{"language":"py","code":"class Solution:\\n    def subarraySum(self, nums: List[int], k: int) -> int:\\n        mp, sm, count = {}, 0, 0\\n        mp[0] = 1\\n        for i in range(0, len(nums)):\\n            sm += nums[i]\\n            if sm-k in mp:\\n                count += mp[sm - k]\\n            mp[sm] = mp.get(sm, 0) + 1\\n        return count","subPath":"","fileName":"solution.py"}}')}}]);