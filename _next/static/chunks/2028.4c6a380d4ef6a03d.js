"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2028],{32028:n=>{n.exports=JSON.parse('{"cpp":{"language":"cpp","code":"class Solution {\\npublic:\\n    int characterReplacement(string s, int k) {\\n        int maxfreq = 0, left = 0, ans = 0;\\n        vector<int> v(26, 0);\\n        for(int right=0; right<s.length(); right++) {\\n            v[s[right] - \'A\']++;\\n            maxfreq = max(maxfreq, v[s[right] - \'A\']);\\n            if (right - left + 1 - maxfreq > k) {\\n                v[s[left] - \'A\']--;\\n                left++;\\n            }\\n            ans = max(ans, right - left + 1);\\n        }\\n        return ans;\\n    }\\n};","subPath":"","fileName":"solution.cpp"},"java":{"language":"java","code":"class Solution {\\n\\n    public int characterReplacement(String s, int k) {\\n        int[] arr = new int[26];\\n        int ans = 0;\\n        int max = 0;\\n        int i = 0;\\n        for (int j = 0; j < s.length(); j++) {\\n            arr[s.charAt(j) - \'A\']++;\\n            max = Math.max(max, arr[s.charAt(j) - \'A\']);\\n            if (j - i + 1 - max > k) {\\n                arr[s.charAt(i) - \'A\']--;\\n                i++;\\n            }\\n            ans = Math.max(ans, j - i + 1);\\n        }\\n        return ans;\\n    }\\n}","subPath":"","fileName":"solution.java"}}')}}]);