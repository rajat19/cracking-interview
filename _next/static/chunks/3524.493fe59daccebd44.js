"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3524],{13524:n=>{n.exports=JSON.parse('{"c":{"language":"c","code":"int firstMissingPositive(int* nums, int n){\\n    for(int i=0; i<n; i++) {\\n        while (nums[i] > 0 && nums[i] <= n && nums[nums[i]-1] != nums[i]) {\\n            int temp = nums[nums[i]-1];\\n            nums[nums[i]-1] = nums[i];\\n            nums[i] = temp;\\n        }\\n    }\\n    for(int i=0; i<n; i++) {\\n        if (nums[i] != i+1) return i+1;\\n    }\\n    return n+1;\\n}","subPath":"","fileName":"solution.c"},"cpp":{"language":"cpp","code":"class Solution {\\npublic:\\n    int firstMissingPositive(vector<int>& nums) {\\n        int n = nums.size();\\n        for(int i=0; i<n; i++) {\\n            while (nums[i] > 0 && nums[i] <= n && nums[nums[i]-1] != nums[i]) {\\n                int temp = nums[nums[i]-1];\\n                nums[nums[i]-1] = nums[i];\\n                nums[i] = temp;\\n            }\\n        }\\n        for(int i=0; i<n; i++) {\\n            if (nums[i] != i+1) return i+1;\\n        }\\n        return n+1;\\n    }\\n};","subPath":"","fileName":"solution.cpp"},"java":{"language":"java","code":"class Solution {\\n    public int firstMissingPositive(int[] nums) {\\n        for (int i = 0; i < nums.length; i++) {\\n            while (nums[i] > 0 && nums[i] <= nums.length && nums[nums[i]-1] != nums[i]) {\\n                swap(nums, i, nums[i]-1);\\n            }\\n        }\\n\\n        for(int i = 0; i < nums.length; i++) {\\n            if (nums[i] != i+1)    return i+1;\\n        }\\n        return nums.length+1;\\n    }\\n\\n    private void swap(int[] nums, int i, int j) {\\n        int tmp = nums[i];\\n        nums[i] = nums[j];\\n        nums[j] = tmp;\\n    }\\n}","subPath":"","fileName":"solution.java"},"py":{"language":"py","code":"from typing import List\\n\\n\\nclass Solution:\\n    def firstMissingPositive(self, nums: List[int]) -> int:\\n        n = len(nums)\\n        for i in range(n):\\n            while 0 < nums[i] <= n and nums[nums[i] - 1] != nums[i]:\\n                nums[nums[i] - 1], nums[i] = nums[i], nums[nums[i] - 1]\\n\\n        for i in range(n):\\n            if nums[i] != i + 1:\\n                return i + 1\\n        return n + 1","subPath":"","fileName":"solution.py"}}')}}]);