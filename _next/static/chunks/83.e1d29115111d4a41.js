"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[83],{70083:n=>{n.exports=JSON.parse('{"cpp":{"language":"cpp","code":"class Solution {\\npublic:\\n    vector<int> partitionLabels(string s) {\\n        int last[26] = {0};\\n        for(int i=0; i<s.length(); i++) {\\n            last[s[i]-\'a\'] = i;\\n        }\\n        int start = 0, end = 0;\\n        vector<int> res;\\n        for(int i=0; i<s.length(); i++) {\\n            end = max(end, last[s[i] - \'a\']);\\n            if (i == end) {\\n                res.push_back(end-start+1);\\n                start=i+1;\\n            }\\n        }\\n        return res;\\n    }\\n};","subPath":"","fileName":"solution.cpp"},"java":{"language":"java","code":"class Solution {\\n    public List<Integer> partitionLabels(String S) {\\n        int[] last = new int[26];\\n        for (int i = 0; i < S.length(); ++i)\\n            last[S.charAt(i) - \'a\'] = i;\\n\\n        int end = 0, start = 0;\\n        List<Integer> ans = new ArrayList();\\n        for (int i = 0; i < S.length(); ++i) {\\n            end = Math.max(end, last[S.charAt(i) - \'a\']);\\n            if (i == end) {\\n                ans.add(end - start + 1);\\n                start = end + 1;\\n            }\\n        }\\n        return ans;\\n    }\\n}","subPath":"","fileName":"solution.java"},"py":{"language":"py","code":"from typing import List\\n\\n\\nclass Solution:\\n    def partitionLabels(self, s: str) -> List[int]:\\n        n, last = len(s), [0]*26\\n        for i in range(n):\\n            last[ord(s[i]) - ord(\'a\')] = i\\n        start, end, res = 0, 0, []\\n        for i in range(n):\\n            end = max(end, last[ord(s[i]) - ord(\'a\')])\\n            if i == end:\\n                res.append(end - start + 1)\\n                start = end + 1\\n        return res","subPath":"","fileName":"solution.py"}}')}}]);