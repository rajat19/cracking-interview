"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1772],{31772:n=>{n.exports=JSON.parse('{"java":{"language":"java","code":"class Solution {\\n    public String simplifyPath(String path) {\\n        Stack<String> stack = new Stack<>();\\n        Set<String> skip = new HashSet<>(Arrays.asList(\\"..\\",\\".\\",\\"\\"));\\n        for(String dir: path.split(\\"/\\")) {\\n            if (dir.equals(\\"..\\") && !stack.isEmpty()) stack.pop();\\n            else if (!skip.contains(dir)) stack.push(dir);\\n        }\\n        StringBuilder sb = new StringBuilder();\\n        while(!stack.isEmpty()) {\\n            sb.insert(0, stack.pop());\\n            sb.insert(0, \\"/\\");\\n        }\\n        return sb.length() == 0 ? \\"/\\" : sb.toString();\\n    }\\n}","subPath":"","fileName":"solution.java"},"py":{"language":"py","code":"class Solution:\\n    def simplifyPath(self, path: str) -> str:\\n        stack = []\\n        split = path.split(\\"/\\")\\n        for dr in split:\\n            if dr == \'.\':\\n                # do nothing\\n                pass\\n            elif dr == \'..\':\\n                if len(stack) > 0:\\n                    stack.pop()\\n            elif dr == \'\':\\n                # do nothing\\n                pass\\n            else:\\n                stack.append(dr)\\n        return f\\"/{\'/\'.join(stack)}\\"","subPath":"","fileName":"solution.py"}}')}}]);