"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[447],{60447:n=>{n.exports=JSON.parse('{"java":{"language":"java","code":"class Solution {\\n    public boolean canPartition(int[] nums) {\\n        int sum = 0;\\n\\n        for (int num : nums) {\\n            sum += num;\\n        }\\n\\n        if ((sum & 1) == 1) {\\n            return false;\\n        }\\n        sum /= 2;\\n\\n        int n = nums.length;\\n        boolean[] dp = new boolean[sum+1];\\n        Arrays.fill(dp, false);\\n        dp[0] = true;\\n\\n        for (int num : nums) {\\n            for (int i = sum; i > 0; i--) {\\n                if (i >= num) {\\n                    dp[i] = dp[i] || dp[i-num];\\n                }\\n            }\\n        }\\n\\n        return dp[sum];\\n    }\\n}","subPath":"","fileName":"solution.java"},"py":{"language":"py","code":"class Solution:\\n    def canPartition(self, nums: List[int]) -> bool:\\n        sm = sum(nums)\\n        if sm %2 != 0:\\n            return False\\n        sm //= 2\\n        dp = [False]*(sm+1)\\n        dp[0] = True\\n        for num in nums:\\n            for i in range(sm, 0, -1):\\n                if i >= num:\\n                    dp[i] = dp[i] or dp[i-num]\\n        return dp[sm]","subPath":"","fileName":"solution.py"}}')}}]);