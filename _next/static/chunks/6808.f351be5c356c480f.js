"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6808],{26808:n=>{n.exports=JSON.parse('{"java":{"language":"java","code":"class Solution {\\n    public List<String> restoreIpAddresses(String s) {\\n        int n = s.length();\\n        List<String> res = new ArrayList<>();\\n        for(int i=0; i<n-2; i++) {\\n            for(int j=i+1; j<n-1; j++) {\\n                for(int k=j+1; k<n; k++) {\\n                    String s1 = s.substring(0, i);\\n                    String s2 = s.substring(i, j);\\n                    String s3 = s.substring(j, k);\\n                    String s4 = s.substring(k, n);\\n                    if (isValid(s1) && isValid(s2) && isValid(s3) && isValid(s4)) {\\n                        res.add(s1+\\".\\"+s2+\\".\\"+s3+\\".\\"+s4);\\n                    }\\n                }\\n            }\\n        }\\n        return res;\\n    }\\n\\n    private boolean isValid(String s) {\\n        if (s.length() == 0) return false;\\n        if (s.length() > 3) return false;\\n        if (s.charAt(0) == \'0\' && s.length() > 1) return false;\\n        if (Integer.parseInt(s) > 255) return false;\\n        return true;\\n    }\\n}","subPath":"","fileName":"solution.java"},"py":{"language":"py","code":"from typing import List\\n\\n\\nclass Solution:\\n    def restoreIpAddresses(self, s: str) -> List[str]:\\n        res, n = [], len(s)\\n        for i in range(0, n - 2):\\n            for j in range(i + 1, n - 1):\\n                for k in range(j + 1, n):\\n                    s1, s2, s3, s4 = s[:i], s[i:j], s[j:k], s[k:]\\n                    if self.isValid([s1, s2, s3, s4]):\\n                        res.append(s1 + \\".\\" + s2 + \\".\\" + s3 + \\".\\" + s4)\\n        return res\\n\\n    def isValid(self, li):\\n        valid = True\\n        for s in li:\\n            if len(s) == 0 or len(s) > 3 or (s[0] == \'0\' and len(s) > 1) or int(s) > 255:\\n                valid = False\\n                break\\n        return valid","subPath":"","fileName":"solution.py"}}')}}]);