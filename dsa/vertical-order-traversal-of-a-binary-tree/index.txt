1:"$Sreact.fragment"
2:I[10961,["8609","static/chunks/b321d78c-7a062717568e9902.js","9696","static/chunks/26d1fef7-ee766bdebc2771f4.js","6334","static/chunks/6334-d195304efa533649.js","1959","static/chunks/1959-5ce2d9e80376f08d.js","7177","static/chunks/app/layout-25227c6113fa4794.js"],"ThemeProvider"]
3:I[37752,["8609","static/chunks/b321d78c-7a062717568e9902.js","9696","static/chunks/26d1fef7-ee766bdebc2771f4.js","6334","static/chunks/6334-d195304efa533649.js","1959","static/chunks/1959-5ce2d9e80376f08d.js","7177","static/chunks/app/layout-25227c6113fa4794.js"],"AuthProvider"]
4:I[37462,["8609","static/chunks/b321d78c-7a062717568e9902.js","9696","static/chunks/26d1fef7-ee766bdebc2771f4.js","6334","static/chunks/6334-d195304efa533649.js","1959","static/chunks/1959-5ce2d9e80376f08d.js","7177","static/chunks/app/layout-25227c6113fa4794.js"],"default"]
5:I[95079,[],""]
6:I[81019,[],""]
8:I[96590,[],"OutletBoundary"]
a:I[47875,[],"AsyncMetadataOutlet"]
c:I[96590,[],"ViewportBoundary"]
e:I[96590,[],"MetadataBoundary"]
f:"$Sreact.suspense"
11:I[69741,[],""]
:HL["/cracking-interview/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/cracking-interview/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/cracking-interview/_next/static/css/ff78c3bf1dd6c987.css","style"]
:HL["/cracking-interview/_next/static/css/34937f2da1ffdcf9.css","style"]
0:{"P":null,"b":"3ddzafj3y1iV8DPtiYwP4","p":"/cracking-interview","c":["","dsa","vertical-order-traversal-of-a-binary-tree",""],"i":false,"f":[[["",{"children":["dsa",{"children":[["slug","vertical-order-traversal-of-a-binary-tree","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/cracking-interview/_next/static/css/ff78c3bf1dd6c987.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/cracking-interview/_next/static/css/34937f2da1ffdcf9.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_68ab41 __variable_8cef05 antialiased","children":["$","$L2",null,{"children":["$","$L3",null,{"children":[["$","$L4",null,{}],["$","$L5",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}]}]}]}]]}],{"children":["dsa",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","vertical-order-traversal-of-a-binary-tree","d"],["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",null,["$","$L8",null,{"children":["$L9",["$","$La",null,{"promise":"$@b"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$Lc",null,{"children":"$Ld"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Le",null,{"children":["$","div",null,{"hidden":true,"children":["$","$f",null,{"fallback":null,"children":"$L10"}]}]}]]}],false]],"m":"$undefined","G":["$11",[]],"s":false,"S":true}
d:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
b:{"metadata":[["$","title","0",{"children":"Cracking the Interview"}],["$","meta","1",{"name":"description","content":"Master coding interviews with comprehensive practice problems, system design, and behavioral questions"}]],"error":null,"digest":"$undefined"}
10:"$b:metadata"
12:I[36334,["6334","static/chunks/6334-d195304efa533649.js","5982","static/chunks/5982-8f18ab36ced88977.js","1183","static/chunks/app/dsa/%5Bslug%5D/page-2e21c7ce311ec90f.js"],""]
7:["$","div",null,{"className":"min-h-screen bg-gray-50 dark:bg-gray-900","children":["$","div",null,{"className":"container mx-auto px-4 py-8","children":[["$","div",null,{"className":"mb-8","children":["$","$L12",null,{"href":"/dsa","className":"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300","children":"‚Üê Back to DSA Problems"}]}],["$","div",null,{"className":"bg-white dark:bg-gray-800 rounded-lg shadow-sm","children":[["$","div",null,{"className":"p-6 border-b border-gray-200 dark:border-gray-700","children":[["$","div",null,{"className":"flex items-center gap-3 mb-4","children":[["$","h1",null,{"className":"text-3xl font-bold text-gray-900 dark:text-white","children":"Vertical Order Traversal of a Binary Tree"}],["$","span",null,{"className":"px-3 py-1 rounded-full text-sm font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300","children":"hard"}]]}],["$","div",null,{"className":"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4","children":[["$","div",null,{"className":"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg","children":[["$","div",null,{"className":"text-sm text-gray-500 dark:text-gray-400","children":"Time Complexity"}],["$","div",null,{"className":"font-mono text-lg text-gray-900 dark:text-white","children":"O(n)"}]]}],["$","div",null,{"className":"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg","children":[["$","div",null,{"className":"text-sm text-gray-500 dark:text-gray-400","children":"Space Complexity"}],["$","div",null,{"className":"font-mono text-lg text-gray-900 dark:text-white","children":"O(n)"}]]}],["$","div",null,{"className":"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg","children":[["$","div",null,{"className":"text-sm text-gray-500 dark:text-gray-400","children":"Topics"}],["$","div",null,{"className":"text-sm text-gray-900 dark:text-white","children":[6," topics"]}]]}]]}],["$","div",null,{"className":"mb-4","children":[["$","div",null,{"className":"text-sm text-gray-500 dark:text-gray-400 mb-2","children":"Asked by Companies:"}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","span","facebook",{"className":"px-2 py-1 bg-blue-50 dark:bg-blue-900 text-blue-700 dark:text-blue-300 rounded text-sm capitalize","children":"facebook"}],["$","span","google",{"className":"px-2 py-1 bg-blue-50 dark:bg-blue-900 text-blue-700 dark:text-blue-300 rounded text-sm capitalize","children":"google"}]]}]]}],["$","div",null,{"className":"mb-4","children":[["$","div",null,{"className":"text-sm text-gray-500 dark:text-gray-400 mb-2","children":"Related Topics:"}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","span","hash-table",{"className":"px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded text-sm","children":"hash-table"}],["$","span","tree",{"className":"px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded text-sm","children":"tree"}],["$","span","depth-first-search",{"className":"px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded text-sm","children":"depth-first-search"}],["$","span","breadth-first-search",{"className":"px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded text-sm","children":"breadth-first-search"}],["$","span","sorting",{"className":"px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded text-sm","children":"sorting"}],["$","span","binary-tree",{"className":"px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded text-sm","children":"binary-tree"}]]}]]}]]}],["$","div",null,{"className":"p-6","children":["$","div",null,{"className":"prose prose-lg dark:prose-invert max-w-none","children":"$L13"}]}]]}]]}]}]
13:[["$","hr",null,{}],"\n",["$","h2",null,{"children":"layout: post\ntitle: Vertical Order Traversal of a Binary Tree\ndifficulty: hard\ntopics: [hash-table, tree, depth-first-search, breadth-first-search, sorting, binary-tree]\nlangs: [java]\ntc: O(n)\nsc: O(n)\ncompanies: [facebook, google]\nleetid: 1029\nleetcode: vertical-order-traversal-of-a-binary-tree\ngfg:\ninterviewbit:\nhackerrank:"}],"\n",["$","p",null,{"children":["Given the ",["$","code",null,{"children":"root"}]," of a binary tree, calculate the ",["$","strong",null,{"children":"vertical order traversal"}]," of the binary tree.\nFor each node at position ",["$","code",null,{"children":"(row, col)"}],", its left and right children will be at positions ",["$","code",null,{"children":"(row + 1, col - 1)"}]," and ",["$","code",null,{"children":"(row + 1, col + 1)"}]," respectively. The root of the tree is at ",["$","code",null,{"children":"(0, 0)"}],".\nThe ",["$","strong",null,{"children":"vertical order traversal"}]," of a binary tree is a list of top-to-bottom orderings for each column index starting from the leftmost column and ending on the rightmost column. There may be multiple nodes in the same row and same column. In such a case, sort these nodes by their values.\nReturn ",["$","em",null,{"children":["the ",["$","strong",null,{"children":"vertical order traversal"}]," of the binary tree"]}],"."]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"Test Cases"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Example 1:"}]}],"\n",["$","img",null,{"alt":"","src":"https://assets.leetcode.com/uploads/2021/01/29/vtree1.jpg","style":{"width":"431px","height":"304px"}}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"Input: root = [3,9,20,null,null,15,7]\nOutput: [[9],[3,15],[20],[7]]\nExplanation:\nColumn -1: Only node 9 is in this column.\nColumn 0: Nodes 3 and 15 are in this column in that order from top to bottom.\nColumn 1: Only node 20 is in this column.\nColumn 2: Only node 7 is in this column.\n"}]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Example 2:"}]}],"\n",["$","img",null,{"alt":"","src":"https://assets.leetcode.com/uploads/2021/01/29/vtree2.jpg","style":{"width":"512px","height":"304px"}}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"Input: root = [1,2,3,4,5,6,7]\nOutput: [[4],[2],[1,5,6],[3],[7]]\nExplanation:\nColumn -2: Only node 4 is in this column.\nColumn -1: Only node 2 is in this column.\nColumn 0: Nodes 1, 5, and 6 are in this column.\n          1 is at the top, so it comes first.\n          5 and 6 are at the same position (2, 0), so we order them by their value, 5 before 6.\nColumn 1: Only node 3 is in this column.\nColumn 2: Only node 7 is in this column.\n"}]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Example 3:"}]}],"\n",["$","img",null,{"alt":"","src":"https://assets.leetcode.com/uploads/2021/01/29/vtree3.jpg","style":{"width":"512px","height":"304px"}}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"Input: root = [1,2,3,4,6,5,7]\nOutput: [[4],[2],[1,5,6],[3],[7]]\nExplanation:\nThis case is the exact same as example 2, but with nodes 5 and 6 swapped.\nNote that the solution remains the same since 5 and 6 are in the same location and should be ordered by their values.\n"}]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Constraints:"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["The number of nodes in the tree is in the range ",["$","code",null,{"children":"[1, 1000]"}],"."]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","code",null,{"children":"0 <= Node.val <= 1000"}]}],"\n"]}],"\n"]}]]
