{
  "cpp": {
    "language": "cpp",
    "code": "class Solution {\npublic:\n    bool isMatch(string text, string pattern) {\n        int n1 = text.size();\n        int n2 = pattern.size();\n        vector<vector<bool>> dp(n1+1, vector<bool>(n2+1, false));\n        dp[0][0] = true;\n        for (int j = 1; j <= n2; j++) {\n            if (pattern[j - 1] == '*') dp[0][j] = dp[0][j - 1];\n        }\n        for (int i = 1; i <= n1; i++) {\n            dp[i][0] = false;\n        }\n        for (int i = 1; i <= n1; i++) {\n            for (int j = 1; j <= n2; j++) {\n                if (text[i - 1] == pattern[j - 1] || pattern[j - 1] == '?') {\n                    dp[i][j] = dp[i - 1][j - 1];\n                } else if (pattern[j - 1] == '*') {\n                    dp[i][j] = dp[i - 1][j] || dp[i][j - 1];\n                } else {\n                    dp[i][j] = false;\n                }\n            }\n        }\n        return dp[n1][n2];\n    }\n};",
    "subPath": "",
    "fileName": "solution.cpp"
  },
  "java": {
    "language": "java",
    "code": "class Solution {\n    public boolean isMatch(String s, String p) {\n        int n = s.length(), m = p.length();\n        boolean[][] dp = new boolean[n+1][m+1];\n        dp[0][0] = true;\n        for(int i=1; i<=m; i++) {\n            if (p.charAt(i-1) == '*') dp[0][i] = dp[0][i-1];\n        }\n        for(int i=1; i<=n; i++) {\n            for(int j=1; j<=m; j++) {\n                if (p.charAt(j-1) == '*') {\n                    dp[i][j] = dp[i-1][j] || dp[i][j-1];\n                } else if (p.charAt(j-1) == '?' || p.charAt(j-1) == s.charAt(i-1)) {\n                    dp[i][j] = dp[i-1][j-1];\n                } else {\n                    dp[i][j] = false;\n                }\n            }\n        }\n        return dp[n][m];\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  }
}