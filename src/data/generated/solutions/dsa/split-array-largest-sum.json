{
  "java": {
    "language": "java",
    "code": "class Solution {\n    public int splitArray(int[] nums, int m) {\n        int n = nums.length;\n        int[][] memo = new int[n+1][m+1];\n        int[] prefixSum = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            prefixSum[i + 1] = prefixSum[i] + nums[i];\n        }\n\n        for (int subarrayCount = 1; subarrayCount <= m; subarrayCount++) {\n            for (int currIndex = 0; currIndex < n; currIndex++) {\n                if (subarrayCount == 1) {\n                    memo[currIndex][subarrayCount] = prefixSum[n] - prefixSum[currIndex];\n                    continue;\n                }\n\n                int minimumLargestSplitSum = Integer.MAX_VALUE;\n                for (int i = currIndex; i <= n - subarrayCount; i++) {\n                    int firstSplitSum = prefixSum[i + 1] - prefixSum[currIndex];\n                    int largestSplitSum = Math.max(firstSplitSum, memo[i + 1][subarrayCount - 1]);\n                    minimumLargestSplitSum = Math.min(minimumLargestSplitSum, largestSplitSum);\n                    if (firstSplitSum >= minimumLargestSplitSum) {\n                        break;\n                    }\n                }\n                memo[currIndex][subarrayCount] = minimumLargestSplitSum;\n            }\n        }\n\n        return memo[0][m];\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  }
}