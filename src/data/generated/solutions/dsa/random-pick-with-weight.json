{
  "java": {
    "language": "java",
    "code": "class Solution {\n    private int[] prefix;\n    private Random random;\n    public Solution(int[] w) {\n        random = new Random();\n        prefix = new int[w.length];\n        prefix[0] = w[0];\n        for(int i=1; i<w.length; i++) {\n            prefix[i] = w[i] + prefix[i-1];\n        }\n    }\n\n    public int pickIndex() {\n        int limit = prefix[prefix.length - 1];\n        int digit = random.nextInt(limit) + 1;\n        return search(digit);\n    }\n\n    private int search(int digit) {\n        int left = 0, right = prefix.length - 1;\n        while(left <= right) {\n            int mid = left + (right - left)/2;\n            if (prefix[mid] == digit) {\n                return mid;\n            }\n            if (prefix[mid] < digit) {\n                left = mid+1;\n            } else {\n                right = mid-1;\n            }\n        }\n        return left;\n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(w);\n * int param_1 = obj.pickIndex();\n */",
    "subPath": "",
    "fileName": "solution.java"
  },
  "py": {
    "language": "py",
    "code": "class Solution:\n\n    def __init__(self, w: List[int]):\n        self.prefix = [0] * len(w)\n        self.prefix[0] = w[0]\n        for i in range(1, len(w)):\n            self.prefix[i] = self.prefix[i - 1] + w[i]\n        self.total = self.prefix[-1]\n\n    def pickIndex(self) -> int:\n        pick = random.randint(1, self.total)\n        left, right = 0, len(self.prefix) - 1\n        while left < right:\n            mid = (left + right) // 2\n            if self.prefix[mid] < pick:\n                left = mid + 1\n            else:\n                right = mid\n        return left",
    "subPath": "",
    "fileName": "solution.py"
  }
}