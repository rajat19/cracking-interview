{
  "java": {
    "language": "java",
    "code": "class Solution {\n    public List<String> fullJustify(String[] words, int maxWidth) {\n        int left = 0; List<String> result = new ArrayList<>();\n\n        while (left < words.length) {\n            int right = findRight(left, words, maxWidth);\n            result.add(justify(left, right, words, maxWidth));\n            left = right + 1;\n        }\n\n        return result;\n    }\n\n    private int findRight(int left, String[] words, int maxWidth) {\n        int right = left;\n        int sum = words[right++].length();\n\n        while (right < words.length && (sum + 1 + words[right].length()) <= maxWidth)\n            sum += 1 + words[right++].length();\n\n        return right - 1;\n    }\n\n    private String justify(int left, int right, String[] words, int maxWidth) {\n        if (right - left == 0) return padResult(words[left], maxWidth);\n\n        boolean isLastLine = right == words.length - 1;\n        int numSpaces = right - left;\n        int totalSpace = maxWidth - wordsLength(left, right, words);\n\n        String space = isLastLine ? \" \" : blank(totalSpace / numSpaces);\n        int remainder = isLastLine ? 0 : totalSpace % numSpaces;\n\n        StringBuilder result = new StringBuilder();\n        for (int i = left; i <= right; i++)\n            result.append(words[i])\n                    .append(space)\n                    .append(remainder-- > 0 ? \" \" : \"\");\n\n        return padResult(result.toString().trim(), maxWidth);\n    }\n\n    private int wordsLength(int left, int right, String[] words) {\n        int wordsLength = 0;\n        for (int i = left; i <= right; i++) wordsLength += words[i].length();\n        return wordsLength;\n    }\n\n    private String padResult(String result, int maxWidth) {\n        return result + blank(maxWidth - result.length());\n    }\n\n    private String blank(int length) {\n        return new String(new char[length]).replace('\\0', ' ');\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  }
}