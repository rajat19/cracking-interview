{
  "cpp": {
    "language": "cpp",
    "code": "class Solution {\npublic:\n    bool PredictTheWinner(vector<int>& nums) {\n        int n = nums.size();\n        vector<int> dp(n, 0);\n        for(int start=n-1; start>=0; start--) {\n            for(int end=start; end<n; end++) {\n                if (start == end) {\n                    dp[start] = nums[start];\n                } else {\n                    int a = nums[start] - dp[end];\n                    int b = nums[end] - dp[end - 1];\n                    dp[end] = max(a, b);\n                }\n            }\n        }\n        return dp[n-1] >= 0;\n    }\n};",
    "subPath": "",
    "fileName": "solution.cpp"
  },
  "java": {
    "language": "java",
    "code": "public class Solution {\n    public boolean PredictTheWinner(int[] nums) {\n        int[] dp = new int[nums.length];\n        for (int start = nums.length; start >= 0; start--) {\n            for (int end = start; end < nums.length; end++) {\n                if (start == end) {\n                    dp[start] = nums[start];\n                } else {\n                    int a = nums[start] - dp[end];\n                    int b = nums[end] - dp[end - 1];\n                    dp[end] = Math.max(a, b);\n                }\n            }\n        }\n        return dp[nums.length - 1] >= 0;\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  }
}