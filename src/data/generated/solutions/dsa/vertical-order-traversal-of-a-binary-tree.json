{
  "java": {
    "language": "java",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> verticalTraversal(TreeNode root) {\n        TreeMap<Integer, TreeMap<Integer, PriorityQueue<Integer>>> map = new TreeMap<>();\n        Queue<Tuple> queue = new LinkedList<>();\n\n        queue.offer(new Tuple(root, 0, 0));\n        while(!queue.isEmpty()) {\n            Tuple tuple = queue.poll();\n            TreeNode node = tuple.node;\n            int row = tuple.row;\n            int col = tuple.col;\n\n            if (!map.containsKey(row)) {\n                map.put(row, new TreeMap<>());\n            }\n            if (!map.get(row).containsKey(col)) {\n                map.get(row).put(col, new PriorityQueue<>());\n            }\n\n            map.get(row).get(col).offer(node.val);\n\n            if (node.left != null) {\n                queue.offer(new Tuple(node.left, row-1, col+1));\n            }\n\n            if (node.right != null) {\n                queue.offer(new Tuple(node.right, row+1, col+1));\n            }\n        }\n\n        List<List<Integer>> result = new ArrayList<>();\n        for(TreeMap<Integer, PriorityQueue<Integer>> mapValues: map.values()) {\n            result.add(new ArrayList<>());\n            for (PriorityQueue<Integer> nodes: mapValues.values()) {\n                while(!nodes.isEmpty()) {\n                    result.get(result.size() - 1).add(nodes.poll());\n                }\n            }\n        }\n\n        return result;\n    }\n}\n\nclass Tuple {\n    TreeNode node;\n    int row;\n    int col;\n    Tuple(TreeNode node, int row, int col) {\n        this.node = node;\n        this.row = row;\n        this.col = col;\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  }
}