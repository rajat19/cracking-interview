{
  "java": {
    "language": "java",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private TreeNode prev, first, second;\n    public void recoverTree(TreeNode root) {\n        prev = null; first = null; second = null;\n        inorder(root);\n        int temp = first.val;\n        first.val = second.val;\n        second.val = temp;\n    }\n\n    private void inorder(TreeNode root) {\n        if (root == null) return;\n        inorder(root.left);\n        if (first == null && (prev == null || prev.val >= root.val)) {\n            first = prev;\n        }\n        if (first != null && (prev.val >= root.val)) {\n            second = root;\n        }\n        prev = root;\n        inorder(root.right);\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  }
}