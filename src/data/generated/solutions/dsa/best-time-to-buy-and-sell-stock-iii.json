{
  "c": {
    "language": "c",
    "code": "int max(int a, int b) {\n    return a > b ? a: b;\n}\n\nint maxProfit(int* prices, int pricesSize) {\n    int firstBuy = INT_MIN, firstSell = 0;\n    int secondBuy = INT_MIN, secondSell = 0;\n    for(int i = 0; i< pricesSize; i++) {\n        firstBuy = max(firstBuy, -prices[i]);\n        firstSell = max(firstSell, firstBuy + prices[i]);\n        secondBuy = max(secondBuy, firstSell - prices[i]);\n        secondSell = max(secondSell, secondBuy + prices[i]);\n    }\n    return max(firstSell, secondSell);\n}",
    "subPath": "",
    "fileName": "solution.c"
  },
  "cpp": {
    "language": "cpp",
    "code": "class Solution {\npublic:\n    int maxProfit(vector<int>& prices) {\n        int oneBuy = INT_MIN, oneBuyOneSell = 0;\n        int twoBuy = INT_MIN, twoBuyTwoSell = 0;\n        for(int i=0; i<prices.size(); i++) {\n            oneBuy = max(oneBuy, -prices[i]);\n            oneBuyOneSell = max(oneBuyOneSell, oneBuy + prices[i]);\n            twoBuy = max(twoBuy, oneBuyOneSell -prices[i]);\n            twoBuyTwoSell = max(twoBuyTwoSell, twoBuy + prices[i]);\n        }\n        return max(oneBuyOneSell, twoBuyTwoSell);\n    }\n};",
    "subPath": "",
    "fileName": "solution.cpp"
  },
  "java": {
    "language": "java",
    "code": "import java.util.*;\n\nclass Solution {\n    public int maxProfit(int[] prices) {\n        int oneBuy = Integer.MIN_VALUE, oneBuyOneSell = 0;\n        int twoBuy = Integer.MIN_VALUE, twoBuyTwoSell = 0;\n        for(int i=0; i<prices.length; i++) {\n            oneBuy = Math.max(oneBuy, -prices[i]);\n            oneBuyOneSell = Math.max(oneBuyOneSell, oneBuy + prices[i]);\n            twoBuy = Math.max(twoBuy, oneBuyOneSell -prices[i]);\n            twoBuyTwoSell = Math.max(twoBuyTwoSell, twoBuy + prices[i]);\n        }\n        return Math.max(oneBuyOneSell, twoBuyTwoSell);\n    }\n\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n        int[] prices = new int[]{3,3,5,0,0,3,1,4};\n        System.out.println(solution.maxProfit(prices));\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  },
  "py": {
    "language": "py",
    "code": "from typing import List\n\n\nclass Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        ob, tb = float('-inf'), float('-inf')\n        obos, tbts = 0, 0\n        for price in prices:\n            ob = max(ob, -price)\n            obos = max(obos, ob + price)\n            tb = max(tb, obos - price)\n            tbts = max(tbts, tb + price)\n        return max(obos, tbts)\n\n\nif __name__ == '__main__':\n    prices = [3, 3, 5, 0, 0, 3, 1, 4]\n    solution = Solution()\n    print(solution.maxProfit(prices))",
    "subPath": "",
    "fileName": "solution.py"
  }
}