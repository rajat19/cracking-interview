{
  "cpp": {
    "language": "cpp",
    "code": "class Solution {\npublic:\n    int calculate(string s) {\n        stack<int> st;\n        int result = 0, num = 0, sign = 1;\n        st.push(sign);\n        for(int i=0; i<s.length(); i++) {\n            char c = s[i];\n            if (c >= '0' && c <= '9') {\n                num = num*10 - (int)'0' + (int) c;\n            } else if (c == '+' || c == '-') {\n                result += sign * num;\n                sign = st.top() * (c == '+' ? 1: -1);\n                num = 0;\n            } else if (c == '(') {\n                st.push(sign);\n            } else if (c == ')'){\n                st.pop();\n            }\n        }\n        result += sign * num;\n        return result;\n    }\n};",
    "subPath": "",
    "fileName": "solution.cpp"
  },
  "java": {
    "language": "java",
    "code": "class Solution {\n    public int calculate(String s) {\n        int result = 0, sign = 1, num = 0;\n        Stack<Integer> stack = new Stack<Integer>();\n        stack.push(sign);\n        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if(c >= '0' && c <= '9') {\n                num = num * 10 + (c - '0');\n            } else if(c == '+' || c == '-') {\n                result += sign * num;\n                sign = stack.peek() * (c == '+' ? 1: -1);\n                num = 0;\n            } else if(c == '(') {\n                stack.push(sign);\n            } else if(c == ')') {\n                stack.pop();\n            }\n        }\n        result += sign * num;\n        return result;\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  },
  "py": {
    "language": "py",
    "code": "class Solution:\n    def calculate(self, s: str) -> int:\n        res, num, sign = 0, 0, 1\n        stack = [sign]\n        for c in s:\n            if '0' <= c <= '9':\n                num = num * 10 + (ord(c) - ord('0'))\n            elif c in ['+', '-']:\n                res += sign * num\n                sign = stack[-1] * (-1 if c == '-' else 1)\n                num = 0\n            elif c == '(':\n                stack.append(sign)\n            elif c == ')':\n                stack.pop()\n        res += sign * num\n        return res",
    "subPath": "",
    "fileName": "solution.py"
  }
}