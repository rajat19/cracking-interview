{
  "java": {
    "language": "java",
    "code": "class Solution {\n    public int[][] kClosest(int[][] points, int k) {\n        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b) -> Long.compare(getArea(b), getArea(a)));\n        for(int[] point: points) {\n            if (pq.size() < k) {\n                pq.offer(point);\n            } else {\n                if (getArea(point) < getArea(pq.peek())) {\n                    pq.poll();\n                    pq.offer(point);\n                }\n            }\n        }\n\n        int[][] res = new int[k][2];\n        while(!pq.isEmpty()) {\n            res[--k] = pq.poll();\n        }\n\n        return res;\n    }\n\n    private long getArea(int[] a) {\n        return (a[0]*a[0] + a[1]*a[1]);\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  }
}