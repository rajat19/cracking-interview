{
  "cpp": {
    "language": "cpp",
    "code": "class Solution {\npublic:\n    vector<int> findBall(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        vector<int> res;\n        for(int j=0; j<m; j++) {\n            int startCol = j;\n            for(int i=0; i<n; i++) {\n                int endCol = startCol + grid[i][startCol];\n                if (endCol < 0 || endCol >= m || grid[i][endCol] != grid[i][startCol]) {\n                    startCol = -1;\n                    break;\n                }\n                startCol = endCol;\n            }\n            res.push_back(startCol);\n        }\n        return res;\n    }\n};",
    "subPath": "",
    "fileName": "solution.cpp"
  },
  "java": {
    "language": "java",
    "code": "class Solution {\n    public int[] findBall(int[][] grid) {\n        int n = grid.length, m = grid[0].length;\n        int[] res = new int[m];\n        for(int j=0; j<m; j++) {\n            int startCol = j;\n            for(int i=0; i<n; i++) {\n                int endCol = startCol + grid[i][startCol];\n                if (endCol < 0 || endCol >= m || grid[i][endCol] != grid[i][startCol]) {\n                    startCol = -1;\n                    break;\n                }\n                startCol = endCol;\n            }\n            res[j] = startCol;\n        }\n        return res;\n    }\n}",
    "subPath": "",
    "fileName": "solution.java"
  }
}